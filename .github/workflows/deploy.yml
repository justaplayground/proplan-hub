name: ðŸš€ Deploy to Nginx | Dellbuntu

on:
  push:
    branches:
      - main

permissions:
  actions: write
  contents: read

env:
  NGINX_SERVER_NAME: "justdemo.work"

jobs:
  # Build on Github Ubuntu to save the resource
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Build frontend
        run: |
          npm i --legacy-peer-deps
          npm run build
          # Replace placeholder with actual server name
          sed -i "s/\${NGINX_SERVER_NAME}/${{ env.NGINX_SERVER_NAME }}/g" nginx.conf
          cp nginx.conf dist/

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: proplan-hub-dist
          path: dist

  # Deploy to Dellbuntu | My Home Server
  # NOTE: This requires passwordless sudo for gh-runner user
  # Run on server: sudo visudo and add: gh-runner ALL=(ALL) NOPASSWD: ALL
  deploy-frontend:
    runs-on: [self-hosted, home, dellbuntu]
    needs: build-frontend
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: proplan-hub-dist
          path: dist

      - name: Prepare nginx deploy path
        run: |
          sudo mkdir -p /var/www/proplan-hub
          sudo chown -R gh-runner:gh-runner /var/www/proplan-hub

      - name: Deploy frontend to nginx folder
        run: |
          sudo rm -rf /var/www/proplan-hub/dist
          sudo cp -r dist /var/www/proplan-hub/dist
          sudo cp -r dist/nginx.conf /etc/nginx/sites-available/proplan-hub
          sudo ln -sf /etc/nginx/sites-available/proplan-hub /etc/nginx/sites-enabled/
          sudo nginx -t
          sudo systemctl restart nginx

      - name: Cleanup artifacts
        if: success()
        run: |
          # Clean up downloaded artifacts from runner
          rm -rf dist
          # Clean up any temporary files
          rm -rf /tmp/proplan-hub-* || true

  # Cleanup GitHub Actions artifacts
  cleanup-artifacts:
    runs-on: ubuntu-latest
    needs: [build-frontend, deploy-frontend]
    if: always()
    steps:
      - name: Delete artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });
            
            for (const artifact of artifacts.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
              console.log(`Deleted artifact: ${artifact.name}`);
            }
